image: docker:latest

services:
  - docker:dind

stages:
  - build
  - test
  - deploy

variables:
  DOCKER_DRIVER: overlay2
  AWS_ACCESS_KEY_ID: "AKIA6JKEXYV3TWGVVQXU"
  AWS_SECRET_ACCESS_KEY: "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"

before_script:
  - docker info

build:
  stage: build
  script:
    - docker build -t docker-react -f Dockerfile.dev .

test:
  stage: test
  script:
    - docker run docker-react npm run test

deploy:
  stage: deploy
  script:
    - apt-get update -qq && apt-get install -y -qq python3-pip
    - pip3 install --upgrade awscli
    - eval $(aws ecr get-login --no-include-email --region ap-southeast-2)
    - docker build -t docker-react .
    - docker tag docker-react:latest 982081062263.dkr.ecr.ap-southeast-2.amazonaws.com/frontend:latest
    - docker push 982081062263.dkr.ecr.ap-southeast-2.amazonaws.com/frontend:latest
    - |
      if [ "$CI_COMMIT_BRANCH" == "master" ]; then
        aws elasticbeanstalk create-application-version --application-name frontend --version-label $CI_PIPELINE_ID --source-bundle S3Bucket="elasticbeanstalk-ap-southeast-2-982081062263",S3Key="frontend/$CI_PIPELINE_ID.zip"
        aws elasticbeanstalk update-environment --application-name frontend --environment-name Frontend-env --version-label $CI_PIPELINE_ID
      fi
  only:
    - master